{"version":3,"sources":["scripts/slider.js"],"names":["slider","document","querySelector","sliderRow","firstSlide","buttonNext","buttonBack","navButtons","querySelectorAll","chaptersCounts","quantifyOfSlides","reduce","sum","elem","marginWidth","parseFloat","window","getComputedStyle","marginRight","cardWidth","offsetWidth","initSlider","onclick","fullWidth","currentPos","scrollLeft","Math","ceil","floor","chaptersPositions","i","length","push","onscroll","nearest","difference","Infinity","position","NaN","indexOfChapter","abs","control","checked","style","opacity","addEventListener","setTimeout"],"mappings":"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","file":"slider.6dfacfd0.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable max-len */\n'use strict';\n\n// init elements\nconst slider = document.querySelector('.slider');\nconst sliderRow = document.querySelector('.slider__slides-row');\nconst firstSlide = document.querySelector('.slider__slide');\nconst buttonNext = document.querySelector('.shop__slides-navigation-button--next');\nconst buttonBack = document.querySelector('.shop__slides-navigation-button--back');\nconst navButtons = [...document.querySelectorAll('.slider-navigation-button')];\n\n// init data\nconst chaptersCounts = [3, 3, 3, 3]; // 4 for face, 4 for body, 4 for ha...\n// you can change array above, but totally them should be 16 (like cards in html)\nconst quantifyOfSlides = chaptersCounts.reduce((sum, elem) => sum + elem);\nconst marginWidth = parseFloat(window.getComputedStyle(firstSlide).marginRight);\nlet cardWidth = (sliderRow.offsetWidth - marginWidth * (quantifyOfSlides - 1)) / quantifyOfSlides;\n\nconst initSlider = () => {\n  // arrow buttons logic\n  buttonNext.onclick = () => {\n    const fullWidth = (marginWidth + cardWidth);\n    const currentPos = slider.scrollLeft;\n\n    if (currentPos % fullWidth < 10 || fullWidth - (currentPos % fullWidth) < 10) {\n    /* if it is on straight place then go to next slide */\n      slider.scrollLeft = currentPos + fullWidth;\n    } else {\n    /* if slide is somewhere on middle then set it on straight position */\n      slider.scrollLeft = Math.ceil(currentPos / fullWidth) * fullWidth;\n    }\n  };\n\n  buttonBack.onclick = () => {\n    const fullWidth = (marginWidth + cardWidth);\n    const currentPos = slider.scrollLeft;\n\n    if (currentPos % fullWidth < 10 || fullWidth - (currentPos % fullWidth) < 10) {\n    /* if it is on straight place then go to next slide */\n      slider.scrollLeft = currentPos - fullWidth;\n    } else {\n    /* if slide is somewhere on middle then set it on straight position */\n      slider.scrollLeft = Math.floor(currentPos / fullWidth) * fullWidth;\n    }\n  };\n\n  // slider navigation logic\n  /* make array of proper breackpoints (scrollLeft values) for every chapter (button) */\n  const chaptersPositions = [0]; /* first chapter position is everytime scrollLeft === 0 */\n\n  for (let i = 0; i < chaptersCounts.length - 1; i++) {\n    chaptersPositions.push(chaptersPositions[i] + chaptersCounts[i] * (cardWidth + marginWidth));\n  }\n\n  /* set listeners on each button. Each listener will set on appropriate scroll position */\n  for (let i = 0; i < navButtons.length; i++) {\n    navButtons[i].onclick = () => {\n      slider.scrollLeft = chaptersPositions[i];\n    };\n  }\n\n  /* it will change active chapter button depended of appropriate scroll position */\n  slider.onscroll = () => {\n    const nearest = {\n      difference: Infinity,\n      position: NaN,\n      indexOfChapter: null,\n    };\n\n    /* it calculates nearest chapter of current scroll position */\n    for (let i = 0; i < chaptersPositions.length; i++) {\n      if (Math.abs(chaptersPositions[i] - slider.scrollLeft) < nearest.difference) {\n        nearest.difference = Math.abs(chaptersPositions[i] - slider.scrollLeft);\n        nearest.position = chaptersPositions[i];\n        nearest.indexOfChapter = i;\n      }\n    }\n\n    /* this activate proper (nearest) chapters button */\n    navButtons[nearest.indexOfChapter].control.checked = true;\n\n    /* this activate or deactivate arrow buttons if there space to scroll or not */\n    if (slider.scrollLeft === 0) {\n      buttonBack.style.opacity = '0.3';\n    } else if ((slider.scrollLeft + slider.offsetWidth) >= sliderRow.offsetWidth) {\n      buttonNext.style.opacity = '0.3';\n    } else {\n      buttonNext.style.opacity = buttonBack.style.opacity = '1';\n    }\n  };\n};\n\ninitSlider();\n\n// when window sizes changes, then card sizes changes too\nwindow.addEventListener('resize', () => {\n  setTimeout(() => {\n    cardWidth = (sliderRow.offsetWidth - marginWidth * (quantifyOfSlides - 1)) / quantifyOfSlides;\n    initSlider();\n  }, 1000); /* there are bug in browser, sometimes it dont update card.offsetWidth in time */\n});\n\n// menu closing\n"]}